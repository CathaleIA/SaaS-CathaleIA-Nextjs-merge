{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../product.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\n\nfunction EditComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Price is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let EditComponent = /*#__PURE__*/(() => {\n  class EditComponent {\n    constructor(route, router, productSvc, fb) {\n      this.route = route;\n      this.router = router;\n      this.productSvc = productSvc;\n      this.fb = fb;\n    }\n\n    ngOnInit() {\n      this.productId$ = this.route.params.pipe(map(p => p['productId']));\n      this.product$ = this.productId$.pipe(switchMap(p => this.productSvc.get(p)));\n      this.productName$ = this.product$.pipe(map(p => p?.name));\n      this.productForm = this.fb.group({\n        productId: [''],\n        name: [''],\n        price: [''],\n        description: ['']\n      });\n      this.product$.subscribe(val => {\n        this.productForm?.patchValue({ ...val\n        });\n      });\n    }\n\n    get name() {\n      return this.productForm?.get('name');\n    }\n\n    get price() {\n      return this.productForm?.get('price');\n    }\n\n    submit() {\n      this.productSvc.put(this.productForm?.value).subscribe({\n        next: () => this.router.navigate(['products']),\n        error: err => console.error(err)\n      });\n    }\n\n    delete() {\n      this.productSvc.delete(this.productForm?.value).subscribe({\n        next: () => this.router.navigate(['products']),\n        error: err => {\n          alert(err);\n          console.error(err);\n        }\n      });\n    }\n\n    cancel() {\n      this.router.navigate(['products']);\n    }\n\n  }\n\n  EditComponent.ɵfac = function EditComponent_Factory(t) {\n    return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  EditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditComponent,\n    selectors: [[\"app-edit\"]],\n    decls: 26,\n    vars: 3,\n    consts: [[1, \"product-form\"], [3, \"formGroup\"], [1, \"card\"], [\"matInput\", \"\", \"placeholder\", \"Product name\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"], [\"type\", \"number\", \"matInput\", \"\", \"placeholder\", \"Product price\", \"formControlName\", \"price\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"description\", \"placeholder\", \"Enter product description\"], [1, \"button-panel\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"]],\n    template: function EditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"mat-card\", 2)(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Create new Product\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"mat-form-field\")(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Enter product name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵtemplate(10, EditComponent_mat_error_10_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-form-field\")(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Enter product price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 5);\n        i0.ɵɵtemplate(15, EditComponent_mat_error_15_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-card-footer\")(21, \"div\", 7)(22, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function EditComponent_Template_button_click_22_listener() {\n          return ctx.submit;\n        });\n        i0.ɵɵtext(23, \" Submit \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function EditComponent_Template_button_click_24_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(25, \" Cancel \");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.name == null ? null : ctx.name.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.price == null ? null : ctx.price.invalid);\n      }\n    },\n    dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i5.MatButton, i6.MatCard, i6.MatCardContent, i6.MatCardTitle, i6.MatCardFooter, i7.MatError, i7.MatFormField, i7.MatLabel, i8.MatInput]\n  });\n  return EditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}