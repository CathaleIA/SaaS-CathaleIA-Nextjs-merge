{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { Auth } from 'aws-amplify';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor() {\n      this.idToken = '';\n    }\n\n    intercept(req, next) {\n      if (req.url.includes('tenant/init')) {\n        return next.handle(req);\n      }\n\n      const s = Auth.currentSession().catch(err => console.log(err));\n      const session$ = from(s);\n      return session$.pipe(filter(sesh => !!sesh), map(sesh => !!sesh ? sesh.getIdToken().getJwtToken() : ''), switchMap(tok => {\n        req = req.clone({\n          headers: req.headers.set('Authorization', 'Bearer ' + tok)\n        });\n        return next.handle(req);\n      }));\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)();\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}