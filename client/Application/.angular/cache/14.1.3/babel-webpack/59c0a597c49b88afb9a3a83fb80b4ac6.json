{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { CognitoIdentityClient } from '@aws-sdk/client-cognito-identity';\nimport { getAmplifyUserAgent } from '../Platform';\n/**\n * Returns a CognitoIdentityClient with middleware\n * @param {CognitoIdentityClientConfig} config\n * @return {CognitoIdentityClient}\n */\n\nexport function createCognitoIdentityClient(config) {\n  var client = new CognitoIdentityClient({\n    region: config.region,\n    customUserAgent: getAmplifyUserAgent()\n  });\n  client.middlewareStack.add(function (next, _) {\n    return function (args) {\n      return next(middlewareArgs(args));\n    };\n  }, {\n    step: 'build',\n    name: 'cacheControlMiddleWare'\n  });\n  return client;\n}\nexport function middlewareArgs(args) {\n  return __assign(__assign({}, args), {\n    request: __assign(__assign({}, args.request), {\n      headers: __assign(__assign({}, args.request.headers), {\n        'cache-control': 'no-store'\n      })\n    })\n  });\n} //# sourceMappingURL=CognitoIdentityClient.js.map","map":null,"metadata":{},"sourceType":"module"}