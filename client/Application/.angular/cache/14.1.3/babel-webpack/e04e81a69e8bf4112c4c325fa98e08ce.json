{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = `${localStorage.getItem('apiGatewayUrl')}`;\n    }\n\n    fetch() {\n      return this.http.get(`${this.baseUrl}/products`);\n    }\n\n    get(productId) {\n      const url = `${this.baseUrl}/product/${productId}`;\n      return this.http.get(url);\n    }\n\n    delete(product) {\n      const url = `${this.baseUrl}/product/${product.shardId}:${product.productId}`;\n      return this.http.delete(url);\n    }\n\n    put(product) {\n      const url = `${this.baseUrl}/product/${product.shardId}:${product.productId}`;\n      return this.http.put(url, product);\n    }\n\n    post(product) {\n      return this.http.post(`${this.baseUrl}/product`, product);\n    }\n\n  }\n\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}