{"version":3,"file":"authenticator.service.d.ts","sources":["authenticator.service.d.ts"],"names":[],"mappingssourcesContent":["import { OnDestroy } from '@angular/core';\nimport { AuthContext, AuthEvent, AuthInterpreter, AuthMachineState } from '@aws-amplify/ui';\nimport { Event, Subscription } from 'xstate';\nimport { AuthSubscriptionCallback } from '../common';\n/**\n * AuthenticatorService provides access to the authenticator state and context.\n */\nexport declare class AuthenticatorService implements OnDestroy {\n    private _authState;\n    private _authService;\n    private _sendEventAliases;\n    private _machineSubscription;\n    private _facade;\n    constructor();\n    ngOnDestroy(): void;\n    /**\n     * Context facades\n     */\n    get error(): string;\n    get hasValidationErrors(): boolean;\n    get isPending(): boolean;\n    get route(): import(\"@aws-amplify/ui\").AuthenticatorRoute;\n    get authStatus(): \"authenticated\" | \"configuring\" | \"unauthenticated\";\n    get user(): import(\"@aws-amplify/ui\").AmplifyUser;\n    get validationErrors(): Record<string, string | string[]>;\n    get codeDeliveryDetails(): import(\"@aws-amplify/ui\").CodeDeliveryDetails;\n    /**\n     * Service facades\n     */\n    get initializeMachine(): (data?: Record<string | number | symbol, any>) => void;\n    get updateForm(): (data?: Record<string | number | symbol, any>) => void;\n    get updateBlur(): (data?: Record<string | number | symbol, any>) => void;\n    get resendCode(): (data?: Record<string | number | symbol, any>) => void;\n    get signOut(): (data?: Record<string | number | symbol, any>) => void;\n    get submitForm(): (data?: Record<string | number | symbol, any>) => void;\n    /**\n     * Transition facades\n     */\n    get toFederatedSignIn(): (data?: Record<string | number | symbol, any>) => void;\n    get toResetPassword(): (data?: Record<string | number | symbol, any>) => void;\n    get toSignIn(): (data?: Record<string | number | symbol, any>) => void;\n    get toSignUp(): (data?: Record<string | number | symbol, any>) => void;\n    get skipVerification(): (data?: Record<string | number | symbol, any>) => void;\n    /**\n     * Internal utility functions\n     */\n    /** @deprecated For internal use only */\n    get authState(): AuthMachineState;\n    /** @deprecated For internal use only */\n    get authService(): AuthInterpreter;\n    /** @deprecated For internal use only */\n    get context(): AuthContext;\n    /** @deprecated For internal use only */\n    get slotContext(): {\n        $implicit: {\n            signOut: (data?: Record<string | number | symbol, any>) => void;\n            initializeMachine: (data?: Record<string | number | symbol, any>) => void;\n            resendCode: (data?: Record<string | number | symbol, any>) => void;\n            submitForm: (data?: Record<string | number | symbol, any>) => void;\n            updateForm: (data?: Record<string | number | symbol, any>) => void;\n            updateBlur: (data?: Record<string | number | symbol, any>) => void;\n            toFederatedSignIn: (data?: Record<string | number | symbol, any>) => void;\n            toResetPassword: (data?: Record<string | number | symbol, any>) => void;\n            toSignIn: (data?: Record<string | number | symbol, any>) => void;\n            toSignUp: (data?: Record<string | number | symbol, any>) => void;\n            skipVerification: (data?: Record<string | number | symbol, any>) => void;\n            authStatus: \"authenticated\" | \"configuring\" | \"unauthenticated\";\n            codeDeliveryDetails: import(\"@aws-amplify/ui\").CodeDeliveryDetails;\n            error: string;\n            hasValidationErrors: boolean;\n            isPending: boolean;\n            route: import(\"@aws-amplify/ui\").AuthenticatorRoute;\n            socialProviders: import(\"@aws-amplify/ui\").SocialProvider[];\n            unverifiedContactMethods: import(\"@aws-amplify/ui\").UnverifiedContactMethods;\n            user: import(\"@aws-amplify/ui\").AmplifyUser;\n            validationErrors: Record<string, string | string[]>;\n        };\n        signOut: (data?: Record<string | number | symbol, any>) => void;\n        initializeMachine: (data?: Record<string | number | symbol, any>) => void;\n        resendCode: (data?: Record<string | number | symbol, any>) => void;\n        submitForm: (data?: Record<string | number | symbol, any>) => void;\n        updateForm: (data?: Record<string | number | symbol, any>) => void;\n        updateBlur: (data?: Record<string | number | symbol, any>) => void;\n        toFederatedSignIn: (data?: Record<string | number | symbol, any>) => void;\n        toResetPassword: (data?: Record<string | number | symbol, any>) => void;\n        toSignIn: (data?: Record<string | number | symbol, any>) => void;\n        toSignUp: (data?: Record<string | number | symbol, any>) => void;\n        skipVerification: (data?: Record<string | number | symbol, any>) => void;\n        authStatus: \"authenticated\" | \"configuring\" | \"unauthenticated\";\n        codeDeliveryDetails: import(\"@aws-amplify/ui\").CodeDeliveryDetails;\n        error: string;\n        hasValidationErrors: boolean;\n        isPending: boolean;\n        route: import(\"@aws-amplify/ui\").AuthenticatorRoute;\n        socialProviders: import(\"@aws-amplify/ui\").SocialProvider[];\n        unverifiedContactMethods: import(\"@aws-amplify/ui\").UnverifiedContactMethods;\n        user: import(\"@aws-amplify/ui\").AmplifyUser;\n        validationErrors: Record<string, string | string[]>;\n    };\n    /** @deprecated For internal use only */\n    subscribe(callback: AuthSubscriptionCallback): Subscription;\n    /** @deprecated For internal use only */\n    send(event: Event<AuthEvent>): void;\n}\n"]}